{"version":3,"sources":["ToDo/todoHeader.js","sprite.svg","ToDo/todoInput.js","ToDo/todoTaskList.js","ToDo/todoList.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","this","props","header","headerHelper","React","Component","InputField","check","bind","inputValue","checkKeyBoard","document","querySelector","value","name","create","data","push","window","localStorage","setItem","JSON","stringify","e","key","type","placeholder","data-list","onKeyDown","onClick","width","height","href","sprite","TaskList","container","edit","remove","nextProps","nextState","append","length","forEach","element","children","onclick","event","target","parentNode","dataset","list","condition","previousElementSibling","disabled","indexof","indexOf","index","splice","Fragment","ToDoList","containerNode","inputFieldNode","editButtonNode","removeButtonNode","mas","state","todos","parse","getItem","createItem","createNode","checkStorage","setState","loadElementsOfTodoList","itemBox","createElement","classList","add","input","innerHTML","getContainerNode","getInputFieldNode","editBtn","getEditButtonNode","removeBtn","getRemoveButtonNode","elements","cloneNode","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","WebFont","load","google","families","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.32870c24.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Header extends React.Component {\r\n  render() {\r\n    return (\r\n      <h1 className=\"todo__header\">\r\n        <span className=\"todo__header-styling\">{this.props.header}</span>\r\n        {this.props.headerHelper}\r\n      </h1>\r\n    );\r\n  }\r\n}\r\n\r\nHeader.propTypes = {\r\n  header: PropTypes.string.isRequired,\r\n  headerHelper: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Header;\r\n","export default __webpack_public_path__ + \"static/media/sprite.d9868400.svg\";","import React from \"react\";\r\nimport sprite from \"../sprite.svg\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass InputField extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.check = this.check.bind(this);\r\n    this.inputValue = null;\r\n    this.checkKeyBoard = this.checkKeyBoard.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.inputValue = document.querySelector('[data-list=\"input-data\"]');\r\n  }\r\n\r\n  check() {\r\n    if (this.inputValue.value !== \"\") {\r\n      const name = this.inputValue.value;\r\n      this.props.create(name);\r\n      this.props.data.push(name);\r\n      window.localStorage.setItem(\"todos\", JSON.stringify(this.props.data));\r\n      this.inputValue.value = \"\";\r\n    }\r\n  }\r\n\r\n  checkKeyBoard(e) {\r\n    if (e.key === \"Enter\") this.check();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"todo__input\">\r\n        <input\r\n          className=\"todo__input-data\"\r\n          type=\"text\"\r\n          placeholder=\"What Do you Want to Do ... \"\r\n          data-list=\"input-data\"\r\n          onKeyDown={this.checkKeyBoard}\r\n        />\r\n        <button\r\n          className=\"todo__input-button\"\r\n          data-list=\"input-button\"\r\n          onClick={this.check}\r\n        >\r\n          <svg width=\"25px\" height=\"25px\">\r\n            <use href={sprite + \"#add\"}></use>\r\n          </svg>\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nInputField.propTypes = {\r\n  data: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  create: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default InputField;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass TaskList extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.container = null;\r\n    this.edit = this.edit.bind(this);\r\n    this.remove = this.remove.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.container = document.querySelector('[data-list=\"container\"]');\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    if (nextProps.append.length > 0) {\r\n      nextProps.append.forEach((element) => {\r\n        this.container.append(element);\r\n        element.children[1].onclick = this.edit;\r\n        element.children[2].onclick = this.remove;\r\n      });\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  edit(event) {\r\n    const element = event.target;\r\n    const name = element.parentNode.dataset.list;\r\n    const condition = element.previousElementSibling.disabled;\r\n    const value = element.previousElementSibling.value;\r\n    if (condition === true) {\r\n      element.previousElementSibling.disabled = !element.previousElementSibling\r\n        .disabled;\r\n    } else {\r\n      element.previousElementSibling.disabled = !element.previousElementSibling\r\n        .disabled;\r\n      let indexof = this.props.data.indexOf(name);\r\n      this.props.data[indexof] = value;\r\n      element.parentNode.dataset.list = value;\r\n      window.localStorage.setItem(\"todos\", JSON.stringify(this.props.data));\r\n    }\r\n  }\r\n\r\n  remove(event) {\r\n    const element = event.target;\r\n    element.parentNode.remove();\r\n    const index = this.props.data.indexOf(element.parentNode.dataset.list);\r\n    this.props.data.splice(index, 1);\r\n    this.props.append.splice(index, 1);\r\n    window.localStorage.setItem(\"todos\", JSON.stringify(this.props.data));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"todo__container\" data-list=\"container\"></div>;\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nTaskList.propTypes = {\r\n  data: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  append: PropTypes.arrayOf(PropTypes.node),\r\n};\r\n\r\nexport default TaskList;\r\n","import React from \"react\";\r\nimport Header from \"./todoHeader\";\r\nimport InputField from \"./todoInput\";\r\nimport TaskList from \"./todoTaskList\";\r\n\r\nclass ToDoList extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.containerNode = null;\r\n    this.inputFieldNode = null;\r\n    this.editButtonNode = null;\r\n    this.removeButtonNode = null;\r\n    this.header = \"TODO\";\r\n    this.headerHelper = \"List\";\r\n    this.mas = [];\r\n    this.state = {\r\n      todos: JSON.parse(window.localStorage.getItem(\"todos\")),\r\n    };\r\n    this.createItem = this.createItem.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.createNode();\r\n    this.checkStorage();\r\n  }\r\n\r\n  checkStorage() {\r\n    if (this.state.todos === null) {\r\n      this.setState({ todos: [] });\r\n      const array = [];\r\n      window.localStorage.setItem(\"todos\", JSON.stringify(array));\r\n    } else {\r\n      this.loadElementsOfTodoList();\r\n    }\r\n  }\r\n\r\n  loadElementsOfTodoList() {\r\n    this.state.todos.forEach((element) => {\r\n      this.createItem(element);\r\n    });\r\n  }\r\n\r\n  createNode() {\r\n    const itemBox = document.createElement(\"div\");\r\n    itemBox.classList.add(\"todo__container-item\");\r\n\r\n    const input = document.createElement(\"input\");\r\n    input.type = \"text\";\r\n    input.disabled = true;\r\n    input.classList.add(\"todo__container-item-input\");\r\n\r\n    const edit = document.createElement(\"button\");\r\n    edit.classList.add(\"todo__container-item-editButton\");\r\n    edit.innerHTML = \"EDIT\";\r\n    edit.dataset.list = \"edit\";\r\n\r\n    const remove = document.createElement(\"button\");\r\n    remove.classList.add(\"todo__container-item-removeButton\");\r\n    remove.innerHTML = \"REMOVE\";\r\n    remove.dataset.list = \"remove\";\r\n\r\n    this.containerNode = itemBox;\r\n    this.inputFieldNode = input;\r\n    this.editButtonNode = edit;\r\n    this.removeButtonNode = remove;\r\n  }\r\n\r\n  get getContainerNode() {\r\n    return this.containerNode.cloneNode(true);\r\n  }\r\n\r\n  get getInputFieldNode() {\r\n    return this.inputFieldNode.cloneNode(true);\r\n  }\r\n\r\n  get getEditButtonNode() {\r\n    return this.editButtonNode.cloneNode(true);\r\n  }\r\n\r\n  get getRemoveButtonNode() {\r\n    return this.removeButtonNode.cloneNode(true);\r\n  }\r\n\r\n  createItem(name) {\r\n    const container = this.getContainerNode;\r\n    const input = this.getInputFieldNode;\r\n    const editBtn = this.getEditButtonNode;\r\n    const removeBtn = this.getRemoveButtonNode;\r\n\r\n    container.dataset.list = name;\r\n    input.value = name;\r\n    container.append(input, editBtn, removeBtn);\r\n\r\n    this.mas.push(container);\r\n\r\n    this.setState({ elements: this.mas });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"todo\">\r\n        <Header header={this.header} headerHelper={this.headerHelper} />\r\n        <InputField data={this.state.todos} create={this.createItem} />\r\n        <TaskList data={this.state.todos} append={this.state.elements} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ToDoList;\r\n","import ToDoList from \"./ToDo/todoList\";\n\nfunction App() {\n  return (\n  <ToDoList/>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport WebFont from \"webfontloader\";\n\nWebFont.load({\n  google: {\n    families: [\"Hind+Web:300;400;500;600;700\"],\n  },\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}